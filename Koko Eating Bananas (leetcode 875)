class Solution {
    public int minEatingSpeed(int[] piles, int H) {
        int left = 1, right = 0;
        for (int pile : piles) right = Math.max(right, pile);
        while (left < right) {
            int mid = left + (right - left) / 2;

            if (canEatAll(piles, H, mid)) right = mid;
            else left = mid + 1;
        }

        return left;
    }

    private boolean canEatAll(int[] piles, int H, int K) {
        int hours = 0;
        for (int pile : piles) {
            hours += (pile + K - 1) / K; // ceil(pile / K)
        }
        return hours <= H;
    }
}
